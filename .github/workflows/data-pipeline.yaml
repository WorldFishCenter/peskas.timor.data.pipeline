name: Peskas Timor Data Pipeline

on:
  push:
  schedule:
    - cron:  '0 0 * * *'

env:
  KOBO_TOKEN: ${{ secrets.PESKAS_KOBO_TOKEN }}
  GCP_SA_KEY: ${{ secrets.PESKAS_DATAINGESTION_GCS_KEY }}
  AIRTABLE_KEY: ${{ secrets.AIRTABLE_KEY }}
  PDS_TOKEN: ${{ secrets.PESKAS_PDS_TOKEN }}
  PDS_SECRET: ${{ secrets.PESKAS_PDS_SECRET }}


jobs:

  build-container:
    name: Build R container
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Build image with cache
        id: build-docker
        uses: whoan/docker-build-with-cache-action@v5
        with:
          username: $GITHUB_ACTOR
          password: "${{ secrets.GITHUB_TOKEN }}"
          registry: docker.pkg.github.com
          image_name: r-runner-peskas-timor
          dockerfile: Dockerfile.prod

  ingest-preprocess-landings:
    name: Ingest landings
    needs: build-container
    runs-on: ubuntu-20.04
    container:
      image: docker.pkg.github.com/worldfishcenter/peskas.timor.data.pipeline/r-runner-peskas-timor
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Set env to production
        if: endsWith(github.ref, '/main')
        run: echo "R_CONFIG_ACTIVE=production" >> $GITHUB_ENV
      - name: Call ingest_landings()
        run: Rscript -e 'peskas.timor.data.pipeline::ingest_landings()'
      - name: Call preprocess_landings()
        run: Rscript -e 'peskas.timor.data.pipeline::preprocess_landings()'

  ingest-preprocess-metadata-tables:
    name: Ingest metadata tables
    needs: build-container
    runs-on: ubuntu-20.04
    container:
      image: docker.pkg.github.com/worldfishcenter/peskas.timor.data.pipeline/r-runner-peskas-timor
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Set env to production
        if: endsWith(github.ref, '/main')
        run: echo "R_CONFIG_ACTIVE=production" >> $GITHUB_ENV
      - name: Call ingest_metadata_tables()
        run: Rscript -e 'peskas.timor.data.pipeline::ingest_metadata_tables()'
      - name: Call preprocess_landings()
        run: Rscript -e 'peskas.timor.data.pipeline::preprocess_metadata_tables()'

  ingest-pds-trips:
    name: Ingest pds trips
    needs: build-container
    runs-on: ubuntu-20.04
    container:
      image: docker.pkg.github.com/worldfishcenter/peskas.timor.data.pipeline/r-runner-peskas-timor
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Set env to production
        if: endsWith(github.ref, '/main')
        run: echo "R_CONFIG_ACTIVE=production" >> $GITHUB_ENV
      - name: Call ingest_pds_trips()
        run: Rscript -e 'peskas.timor.data.pipeline::ingest_pds_trips()'
      - name: Call preprocess_pds_trips()
        run: Rscript -e 'peskas.timor.data.pipeline::preprocess_pds_trips()'
      - name: Call validate_pds_trips()
        run: Rscript -e 'peskas.timor.data.pipeline::validate_pds_trips()'

  ingest-pds-tracks:
    name: Ingest pds tracks()
    needs: [ingest-pds-trips]
    runs-on: ubuntu-20.04
    container:
      image: docker.pkg.github.com/worldfishcenter/peskas.timor.data.pipeline/r-runner-peskas-timor
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Set env to production
        if: endsWith(github.ref, '/main')
        run: echo "R_CONFIG_ACTIVE=production" >> $GITHUB_ENV
      - name: Call ingest_pds_tracks()
        run: Rscript -e 'peskas.timor.data.pipeline::ingest_pds_tracks()'

  preprocess-pds-tracks:
    name: preprocess_pds_tracks()
    if: ${{ false }} # Skip for now as it's not been implemented
    needs: ingest-pds-tracks
    runs-on: ubuntu-20.04
    container:
      image: docker.pkg.github.com/worldfishcenter/peskas.timor.data.pipeline/r-runner-peskas-timor
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Set env to production
        if: endsWith(github.ref, '/main')
        run: echo "R_CONFIG_ACTIVE=production" >> $GITHUB_ENV
      - name: Call preprocess_pds_tracks()
        run: echo 'Feature not implemented yet'

  ingest-preprocess-legacy-landings:
    name: Ingest legacy landings
    needs: build-container
    runs-on: ubuntu-20.04
    container:
      image: docker.pkg.github.com/worldfishcenter/peskas.timor.data.pipeline/r-runner-peskas-timor
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Set env to production
        if: endsWith(github.ref, '/main')
        run: echo "R_CONFIG_ACTIVE=production" >> $GITHUB_ENV
      - name: Call ingest_legacy_landings()
        run: Rscript -e 'peskas.timor.data.pipeline::ingest_legacy_landings()'
      - name: Call preprocess_legacy_landings()
        run: Rscript -e 'peskas.timor.data.pipeline::preprocess_legacy_landings()'

  validate-landings:
    name: Validate landings
    needs: [ingest-preprocess-landings, ingest-preprocess-metadata-tables]
    runs-on: ubuntu-20.04
    container:
      image: docker.pkg.github.com/worldfishcenter/peskas.timor.data.pipeline/r-runner-peskas-timor
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Set env to production
        if: endsWith(github.ref, '/main')
        run: echo "R_CONFIG_ACTIVE=production" >> $GITHUB_ENV
      - name: Ingest validation tables
        run: Rscript -e 'peskas.timor.data.pipeline::ingest_validation_tables()'
      - name: Validate landings
        run: Rscript -e 'peskas.timor.data.pipeline::validate_landings()'

  merge-landings:
    name: Merge landings
    needs: [validate-landings, ingest-preprocess-legacy-landings]
    runs-on: ubuntu-20.04
    container:
      image: docker.pkg.github.com/worldfishcenter/peskas.timor.data.pipeline/r-runner-peskas-timor
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Set env to production
        if: endsWith(github.ref, '/main')
        run: echo "R_CONFIG_ACTIVE=production" >> $GITHUB_ENV
      - name: Call merge_landings()
        run: Rscript -e 'peskas.timor.data.pipeline::merge_landings()'

  merge-trips:
    name: merge_trips()
    if: ${{ false }} # Skip for now as it's not been implemented
    needs: [merge-landings, ingest-pds-trips]
    runs-on: ubuntu-20.04
    container:
      image: docker.pkg.github.com/worldfishcenter/peskas.timor.data.pipeline/r-runner-peskas-timor
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Set env to production
        if: endsWith(github.ref, '/main')
        run: echo "R_CONFIG_ACTIVE=production" >> $GITHUB_ENV
      - name: Call merge_trips()
        run: echo 'Feature not implemented yet'

  export-trips:
    name: export_trips()
    if: ${{ false }} # Skip for now as it's not been implemented
    needs: [merge-trips]
    runs-on: ubuntu-20.04
    container:
      image: docker.pkg.github.com/worldfishcenter/peskas.timor.data.pipeline/r-runner-peskas-timor
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Set env to production
        if: endsWith(github.ref, '/main')
        run: echo "R_CONFIG_ACTIVE=production" >> $GITHUB_ENV
      - name: Call export_trips()
        run: echo 'Feature not implemented yet'

